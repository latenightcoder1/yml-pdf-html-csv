<?xml version="1.0" encoding="UTF-8"?>
<!-- Copyright (C) 2019 Tarana Wireless, Inc. All Rights Reserved. -->
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>1.0.0</modelVersion>
  <artifactId>yml-pdf-html-csv</artifactId>
  <name>yml pdf html csv</name>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>2.3.0.RELEASE</version>
  </parent>
  <properties>
    <jdk.version>1.8</jdk.version>
    <maven.compiler.source>${jdk.version}</maven.compiler.source>
    <maven.compiler.target>${jdk.version}</maven.compiler.target>
    <aspectj.version>1.9.2</aspectj.version>
    <jaxb.version>2.3.0</jaxb.version>
    <jaxws.version>2.3.0</jaxws.version>
  </properties>
  <dependencies>
    <!-- Spring boot -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-starter-logging</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-web</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework</groupId>
      <artifactId>spring-context</artifactId>
    </dependency>
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-actuator</artifactId>
    </dependency>

    <!-- JAX-RS -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-jersey</artifactId>
    </dependency>

    <dependency>
      <groupId>javax.activation</groupId>
      <artifactId>activation</artifactId>
      <version>1.1.1</version>
    </dependency>
    <dependency>
      <groupId>javax.annotation</groupId>
      <artifactId>javax.annotation-api</artifactId>
    </dependency>
    <dependency>
      <groupId>javax.xml.bind</groupId>
      <artifactId>jaxb-api</artifactId>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.bind</groupId>
      <artifactId>jaxb-impl</artifactId>
      <version>${javax-jaxb.version}</version>
    </dependency>
    <dependency>
      <groupId>javax.xml.ws</groupId>
      <artifactId>jaxws-api</artifactId>
      <version>${javax-jaxb.version}</version>
    </dependency>
    <dependency>
      <groupId>com.sun.xml.ws</groupId>
      <artifactId>jaxws-rt</artifactId>
      <version>${javax-jaxb.version}</version>
    </dependency>
    <!-- Lombok -->
    <dependency>
      <groupId>org.projectlombok</groupId>
      <artifactId>lombok</artifactId>
      <version>1.16.16</version>
    </dependency>

    <!-- Swagger Dependency -->
    <!-- swagger and spring fox dependencies -->
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-jersey2-jaxrs</artifactId>
      <version>1.5.17</version>
    </dependency>
    <dependency>
      <groupId>io.swagger</groupId>
      <artifactId>swagger-models</artifactId>
      <version>1.5.17</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger2</artifactId>
      <version>2.9.2</version>
    </dependency>
    <dependency>
      <groupId>io.springfox</groupId>
      <artifactId>springfox-swagger-ui</artifactId>
      <version>2.9.2</version>
    </dependency>

    <!-- aspect -->
    <dependency>
      <groupId>org.aspectj</groupId>
      <artifactId>aspectjweaver</artifactId>
      <version>1.9.2</version>
    </dependency>
    <!-- jackson -->
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>2.10.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>2.10.0</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>2.10.0</version>
    </dependency>

    <!-- testing -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-test</artifactId>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>org.junit.vintage</groupId>
          <artifactId>junit-vintage-engine</artifactId>
        </exclusion>
      </exclusions>
    </dependency>

    <!-- logging -->
    <!-- log4j2 impl and slf4j to log4j2 binding -->
    <dependency>
      <groupId>org.springframework.boot</groupId>
      <artifactId>spring-boot-starter-log4j2</artifactId>
      <exclusions>
        <exclusion>
          <groupId>org.slf4j</groupId>
          <artifactId>jul-to-slf4j</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <!-- Needed for Async Logging with Log4j 2 -->
    <dependency>
      <groupId>com.lmax</groupId>
      <artifactId>disruptor</artifactId>
      <version>3.4.2</version>
    </dependency>

    <!-- config client -->
    <!-- Spring boot and Spring cloud compatibility :https://spring.io/projects/spring-cloud -->
    <dependency>
      <groupId>org.springframework.cloud</groupId>
      <artifactId>spring-cloud-config-client</artifactId>
      <version>2.2.4.RELEASE</version>
    </dependency>

    <!-- Micrometer -->
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-registry-prometheus</artifactId>
    </dependency>
    <dependency>
      <groupId>io.micrometer</groupId>
      <artifactId>micrometer-jersey2</artifactId>
    </dependency>

    <!-- https://mvnrepository.com/artifact/com.opencsv/opencsv -->
    <dependency>
      <groupId>com.opencsv</groupId>
      <artifactId>opencsv</artifactId>
      <version>5.7.1</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.yaml/snakeyaml -->
    <dependency>
      <groupId>org.yaml</groupId>
      <artifactId>snakeyaml</artifactId>
      <version>2.0</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.itextpdf/itextpdf -->
    <dependency>
      <groupId>com.itextpdf</groupId>
      <artifactId>itextpdf</artifactId>
      <version>5.5.13.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/com.itextpdf.tool/xmlworker -->
    <dependency>
      <groupId>com.itextpdf.tool</groupId>
      <artifactId>xmlworker</artifactId>
      <version>5.5.13.3</version>
    </dependency>
    <!-- https://mvnrepository.com/artifact/org.gitlab4j/gitlab4j-api -->
    <dependency>
      <groupId>org.gitlab4j</groupId>
      <artifactId>gitlab4j-api</artifactId>
      <version>5.0.1</version>
    </dependency>
  </dependencies>
  <build>
    <plugins>
      <plugin>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-maven-plugin</artifactId>
        <configuration>
          <layers>
            <enabled>true</enabled>
            <includeLayerTools>true</includeLayerTools>
          </layers>
        </configuration>
      </plugin>

      <plugin>
        <groupId>pl.project13.maven</groupId>
        <artifactId>git-commit-id-plugin</artifactId>
        <configuration>
          <dotGitDirectory>${project.basedir}/../.git</dotGitDirectory>
          <generateGitPropertiesFile>true</generateGitPropertiesFile>
          <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties
          </generateGitPropertiesFilename>
          <failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
          <validationProperties>
            <validationProperty>
              <name>git dirty validation</name>
              <value>${git.dirty}</value>
              <shouldMatchTo>false</shouldMatchTo>
            </validationProperty>
          </validationProperties>
        </configuration>
        <executions>
          <execution>
            <id>validate-the-git-infos</id>
            <goals>
              <goal>validateRevision</goal>
            </goals>
            <phase>deploy</phase>
          </execution>
        </executions>
      </plugin>

      <!-- unit tests -->
      <plugin>
        <artifactId>maven-surefire-plugin</artifactId>
        <configuration>
          <forkMode>once</forkMode>
          <argLine>${coverageAgent}</argLine>
          <includes>
            <include>**/*Test.java</include>
            <include>**/*Tests.java</include>
          </includes>
          <excludes>
            <exclude>**/WebTestCase.java</exclude>
          </excludes>
        </configuration>
      </plugin>

      <!-- checkstyle -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-checkstyle-plugin</artifactId>
        <version>3.0.0</version>
        <dependencies>
          <dependency>
            <groupId>com.puppycrawl.tools</groupId>
            <artifactId>checkstyle</artifactId>
            <version>8.17</version>
          </dependency>
          <dependency>
            <artifactId>commons-checkstyle-config</artifactId>
            <groupId>com.tarana.tcc.commons</groupId>
            <version>0.0.1-SNAPSHOT</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>checkstyle</id>
            <phase>test</phase>
            <configuration>
              <configLocation>checkstyle.xml</configLocation>
              <encoding>UTF-8</encoding>
              <consoleOutput>true</consoleOutput>
              <failsOnError>true</failsOnError>
              <includeTestSourceDirectory>true</includeTestSourceDirectory>
              <failOnViolation>true</failOnViolation>
              <linkXRef>false</linkXRef>
            </configuration>
            <goals>
              <goal>checkstyle</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- spotbugs -->
      <plugin>
        <groupId>com.github.spotbugs</groupId>
        <artifactId>spotbugs-maven-plugin</artifactId>
        <version>3.1.8</version>
        <dependencies>
          <dependency>
            <groupId>com.github.spotbugs</groupId>
            <artifactId>spotbugs</artifactId>
            <version>3.1.9</version>
          </dependency>
        </dependencies>
        <configuration>
          <outputDirectory>target/site/spotbugs/</outputDirectory>
          <xmlOutputDirectory>target/site/spotbugs/</xmlOutputDirectory>
          <failOnError>true</failOnError>
          <xmlOutput>true</xmlOutput>
        </configuration>
        <executions>
          <execution>
            <id>spotbugs</id>
            <phase>test</phase>
            <goals>
              <goal>spotbugs</goal>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <!-- java code coverage -->
      <!--<plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.3</version>
        <executions>
          <execution>
            <id>jacoco-prepare-agent</id>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>jacoco-report</id>
            <phase>test</phase>
            <goals>
              <goal>report</goal>
            </goals>
            <configuration>
              <dataFile>target/jacoco.exec</dataFile>
              <outputDirectory>target/site/coverage</outputDirectory>
              <excludes>
                <exclude>com/tarana/tcc/events/query/Application*</exclude>
                <exclude>com/tarana/tcc/events/query/service/config/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/constant/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/resource/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/component/aspect/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/repository/**</exclude>
                <exclude>com/tarana/tcc/events/query/model/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/filters/**</exclude>
                <exclude>com/tarana/tcc/events/query/util/**</exclude>
              </excludes>
            </configuration>
          </execution>
          <execution>
            <id>jacoco-check</id>
            <phase>test</phase>
            <goals>
              <goal>check</goal>
            </goals>
            <configuration>
              <rules>
                <rule>
                  <element>BUNDLE</element>
                  <limits>
                    <limit>
                      <counter>LINE</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                    <limit>
                      <counter>BRANCH</counter>
                      <value>COVEREDRATIO</value>
                      <minimum>1.00</minimum>
                    </limit>
                  </limits>
                </rule>
              </rules>
              <excludes>
                <exclude>com/tarana/tcc/events/query/Application*</exclude>
                <exclude>com/tarana/tcc/events/query/service/config/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/constant/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/resource/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/repository/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/component/aspect/**</exclude>
                <exclude>com/tarana/tcc/events/query/model/**</exclude>
                <exclude>com/tarana/tcc/events/query/service/filters/**</exclude>
                <exclude>com/tarana/tcc/events/query/util/**</exclude>
              </excludes>
            </configuration>
          </execution>
        </executions>
        <configuration>
          <propertyName>coverageAgent</propertyName>
        </configuration>
      </plugin>-->
      <!-- Block slf4j bridges in favor of log4j2 bridges -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-enforcer-plugin</artifactId>
        <executions>
          <execution>
            <id>enforce-banned-dependencies</id>
            <goals>
              <goal>enforce</goal>
            </goals>
            <configuration>
              <rules>
                <bannedDependencies>
                  <excludes>
                    <exclude>org.slf4j:jcl-over-slf4j</exclude>
                    <exclude>org.slf4j:jul-to-slf4j</exclude>
                    <exclude>org.slf4j:log4j-over-slf4j</exclude>
                    <exclude>ch.qos.logback:logback</exclude>
                    <exclude>org.springframework.boot:spring-boot-starter-logging</exclude>
                  </excludes>
                  <searchTransitive>true</searchTransitive>
                </bannedDependencies>
              </rules>
              <fail>true</fail>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <id>deployment</id>
      <activation>
        <property>
          <name>jib</name>
          <value>true</value>
        </property>
      </activation>
      <build>
        <plugins>
          <!-- jib plugin to build and upload docker image for integration environment-->
          <plugin>
            <groupId>com.google.cloud.tools</groupId>
            <artifactId>jib-maven-plugin</artifactId>
            <configuration>
              <from>
                <image>amazoncorretto:8</image>
              </from>
              <to>
                <image>
                  docker.twdevops.net/events-ingestion-service:${git.commit.id.abbrev}-${git.branch}
                </image>
              </to>
              <container>
                <ports>
                  <port>8080</port>
                </ports>
                <labels>
                  <git.branch>${git.branch}</git.branch>
                  <git.commit.id>${git.commit.id}</git.commit.id>
                  <git.commit.id.abbrev>${git.commit.id.abbrev}</git.commit.id.abbrev>
                  <git.commit.message.short>${git.commit.message.short}</git.commit.message.short>
                  <git.commit.time>${git.commit.time}</git.commit.time>
                  <git.dirty>${git.dirty}</git.dirty>
                  <git.remote.origin.url>${git.remote.origin.url}</git.remote.origin.url>
                </labels>
              </container>
            </configuration>
            <executions>
              <execution>
                <phase>deploy</phase>
                <goals>
                  <goal>build</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>
</project>